<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geonetwork-opensource</groupId>
    <artifactId>geonetwork</artifactId>
    <version>3.0.4-SNAPSHOT</version>
  </parent>
  <!-- =========================================================== -->
  <!--     Module Description                                      -->
  <!-- =========================================================== -->
  <artifactId>web-app</artifactId>
  <packaging>war</packaging>
  <name>GeoNetwork Web module</name>
  <description> GeoNetwork web module description (TODO). </description>
  <licenses>
    <license>
      <name>General Public License (GPL)</name>
      <url>http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <!-- FIXME set common dependencies to the root pom.xml  -->
  <dependencies>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
      </dependency>
      <!-- rewrite url servletfilter -->
      <dependency>
          <groupId>org.tuckey</groupId>
          <artifactId>urlrewritefilter</artifactId>
      </dependency>

    <dependency>
          <groupId>org.antlr</groupId>
          <artifactId>antlr-runtime</artifactId>
          <version>3.5.2</version>
      </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>saxon-dom</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf</groupId>
      <artifactId>openrdf-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf</groupId>
      <artifactId>openrdf-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf</groupId>
      <artifactId>sesame</artifactId>
    </dependency>	 
    <dependency>
      <groupId>org.openrdf</groupId>
      <artifactId>rio</artifactId>
    </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-orm</artifactId>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
          <scope>compile</scope>
      </dependency>

      <!-- Z39.50, SRU  stuff (ie: Spring, CQL, ...)  -->
    <dependency>
      <groupId>org.dspace</groupId>
      <artifactId>cql-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jzkit</groupId>
      <artifactId>a2j</artifactId>
    </dependency>
    <dependency>
      <groupId>marc4j</groupId>
      <artifactId>marc4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools.xsd</groupId>
      <artifactId>gt-xsd-gml3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-cql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-shapefile</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools.xsd</groupId>
      <artifactId>gt-xsd-filter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-epsg-extension</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-referencing</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-epsg-hsql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geotools.jdbc</groupId>
      <artifactId>gt-jdbc-postgis</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vividsolutions</groupId>
      <artifactId>jts</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-analyzers-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-misc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-queries</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-queryparser</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-facet</artifactId>
    </dependency>
    <dependency>
      <groupId>pcj</groupId>
      <artifactId>pcj</artifactId>
    </dependency>
    <dependency>
      <groupId>batik</groupId>
      <artifactId>batik-ext</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-email</artifactId>
    </dependency>
    <dependency>
      <groupId>avalon-framework</groupId>
      <artifactId>avalon-framework-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.avalon.framework</groupId>
      <artifactId>avalon-framework-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>xmlgraphics-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgis</groupId>
      <artifactId>postgis-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>eu.medsea.mimeutil</groupId>
      <artifactId>mime-util</artifactId>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.tmatesoft.svnkit</groupId>
      <artifactId>svnkit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapfish.print</groupId>
      <artifactId>print-lib</artifactId>
      <version>${print-lib.version}</version>
    </dependency>
    <!-- ====================== -->
    <!-- Generated dependencies -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>cachingxslt</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>oaipmh</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <!-- dummy API for ARC SDE stuff -->
      <groupId>${project.groupId}</groupId>
      <artifactId>dummy-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>services</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>harvesters</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>health-monitor</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>inspire-atom</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- Handled locally by a temporarly repository -->
    <dependency>
      <groupId>dlib</groupId>
      <artifactId>dlib</artifactId>
    </dependency>
    <dependency>
      <groupId>lizard</groupId>
      <artifactId>lizard-tiff</artifactId>
    </dependency>
    <dependency>
      <groupId>jzkit</groupId>
      <artifactId>jzkit-core</artifactId>
      <version>3.r260.geonetwork.patch.1</version>
    </dependency>
    <dependency>
      <groupId>jzkit</groupId>
      <artifactId>jzkit-service</artifactId>
      <version>3.r260.geonetwork.patch.1</version>
    </dependency>
    <dependency>
      <groupId>jzkit</groupId>
      <artifactId>jzkit-z3950-server</artifactId>
      <version>3.r260.geonetwork.patch.1</version>
    </dependency>
    <dependency>
      <groupId>jzkit</groupId>
      <artifactId>jzkit-z3950-plugin</artifactId>
      <version>3.r260.geonetwork.patch.1</version>
    </dependency>
    <dependency>
      <groupId>jakarta</groupId>
      <artifactId>jakarta-slide-webdavlib</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>edu.ucar</groupId>
      <artifactId>netcdf</artifactId>
      <version>4.0.patch</version>
    </dependency>

      <!-- Monitoring libraries -->
      <dependency>
          <groupId>com.yammer.metrics</groupId>
          <artifactId>metrics-core</artifactId>
      </dependency>
      <dependency>
          <groupId>com.yammer.metrics</groupId>
          <artifactId>metrics-servlet</artifactId>
      </dependency>
      <dependency>
          <groupId>com.yammer.metrics</groupId>
          <artifactId>metrics-web</artifactId>
      </dependency>
      <dependency>
          <groupId>com.yammer.metrics</groupId>
          <artifactId>metrics-log4j</artifactId>
      </dependency>

      <!-- language detection -->
      <dependency>
          <groupId>com.cybozu.labs</groupId>
          <artifactId>langdetect</artifactId>
      </dependency>
      <dependency>
          <groupId>net.arnx.jsonic</groupId>
          <artifactId>jsonic</artifactId>
      </dependency>
      <!-- end language detection -->
		<dependency>
      <groupId>opendap</groupId>
      <artifactId>opendap</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>0.2.2</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>apache-log4j-extras</artifactId>
      <version>1.1</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>geonetwork-client</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>web-ui</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>domain</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>services</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>wro4j</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>ro.isdc.wro4j</groupId>
      <artifactId>wro4j-maven-plugin</artifactId>
      <version>${wro.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Add dependencies to schema plugin
      having a custom Bean to be loaded. -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>schema-iso19139</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>schema-iso19110</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>schema-dublin-core</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>geonetwork-${server}</finalName>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/java</source>
                <source>${basedir}/src/main/webapp/WEB-INF/classes/setup/sql/migrate</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>copy-filter-webResource</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <includeEmptyDirs>false</includeEmptyDirs>
              <outputDirectory>${build.webapp.resources}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/webResources</directory>
                  <filtering>true</filtering>
                  <targetPath>${build.webapp.resources}</targetPath>
                </resource>
              </resources>
              <filters>
                <filter>${basedir}/src/main/filters/${env}.properties</filter>
              </filters>
              <overwrite>true</overwrite>
            </configuration>
          </execution>
          <execution>
            <id>copy-schemas</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <includeEmptyDirs>true</includeEmptyDirs>
              <overwrite>true</overwrite>
              <outputDirectory>${build.webapp.resources}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/../schemas</directory>
                  <includes>
                    <include>**/src/main/plugin/*</include>
                  </includes>
                  <targetPath>${project.build.directory}/geonetwork-jetty-run/WEB-INF/data/config/schema_plugins</targetPath>
                </resource>
                <resource>
                  <directory>${project.basedir}/../web-ui/src/main/resources</directory>
                  <targetPath>${project.build.directory}/geonetwork-jetty-run/</targetPath>
                </resource>
                <resource>
                  <directory>${basedir}/src/main/webapp</directory>
                  <targetPath>${project.build.directory}/geonetwork-jetty-run/</targetPath>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.3</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <timestampFormat>{0,date,MM/dd/yyyy hh:mm:ss a}</timestampFormat>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <revisionOnScmFailure>true</revisionOnScmFailure>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <!-- Filter resources according to current profile properties
              (see src/main/filters) and copy them to the webapp -->
          <webResources>
            <resource>
              <directory>${project.basedir}/../schemas</directory>
              <includes>
                <include>**/src/main/plugin/*</include>
              </includes>
              <targetPath>WEB-INF/data/config/schema_plugins</targetPath>
            </resource>
            <!--
            Enable to use ExtJS UI
            <resource>
              <directory>${project.basedir}/../web-client/src/main/resources</directory>
            </resource>-->
            <resource>
              <directory>${project.basedir}/../web-ui/src/main/resources</directory>
            </resource>
            <resource>
              <directory>${build.webapp.resources}</directory>
            </resource>
            <!-- Remove comment tag to include documentation in the build.
            Python and Latex are required to build the documentation. -->
            <!--
            <resource>
              <directory>${rootProjectDir}/docs/eng/users/build/html</directory>
              <targetPath>docs/eng/users</targetPath>
            </resource>
            <resource>
              <directory>${rootProjectDir}/docs/eng/users/build/latex</directory>
              <targetPath>docs/eng/users</targetPath>
               <includes>
                <include>GeoNetworkUserManual.pdf</include>
              </includes>
            </resource>
            <resource>
            <directory>${rootProjectDir}/docs/eng/developer/build/html</directory>
              <targetPath>docs/eng/developer</targetPath>
            </resource>
            <resource>
              <directory>${rootProjectDir}/docs</directory>
              <targetPath>docs</targetPath>
               <includes>
                <include>changes.txt</include>
                <include>license*.html</include>
                <include>readme*.html</include>
              </includes>
            </resource>
            <resource>
              <directory>${rootProjectDir}/docs/eng/developer/build/latex</directory>
              <targetPath>docs/eng/developer</targetPath>
                <includes>
                  <include>GeoNetworkDeveloperManual.pdf</include>
                </includes>
            </resource>-->
          </webResources>
          <packagingExcludes>
            xml/schemas/**,
            catalog/lib/style/bootstrap/docs/**,
            catalog/lib/style/bootstrap/fonts/**,
            catalog/lib/style/bootstrap/grunt/**,
            catalog/lib/style/bootstrap/test-infra/**,
            catalog/lib/style/font-awesome/css/**,
            catalog/lib/style/font-awesome/src/**,
            catalog/lib/style/font-awesome/scss/**
          </packagingExcludes>
          <webXml>${build.webapp.resources}/WEB-INF/web.xml</webXml>
          <webappDirectory>${project.build.directory}/geonetwork</webappDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <contextXml>${basedir}/jetty-context.xml</contextXml>
          <connectors>
            <connector implementation="org.eclipse.jetty.server.bio.SocketConnector">
              <port>8091</port>
              <maxIdleTime>10000</maxIdleTime>
              <requestHeaderSize>20000</requestHeaderSize>
            </connector>
            <connector implementation="org.eclipse.jetty.server.ssl.SslSocketConnector">
              <!-- Note: If another server needs to communicate with this one with
                    https then it needs the environment variables set as follows:
                    -Djavax.net.ssl.trustStore=keystore.jks -Djavax.net.ssl.trustStorePassword=password
                    -->
              <port>8444</port>
              <keystore>${project.basedir}/keystore.jks</keystore>
              <password>password</password>
              <keyPassword>password</keyPassword>
              <truststore>${project.basedir}/keystore.jks</truststore>
              <trustPassword>password</trustPassword>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>

          <webAppSourceDirectory>${project.build.directory}/geonetwork-jetty-run</webAppSourceDirectory>
          <webApp>
            <contextPath>/geonetwork</contextPath>
            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
              <!-- can't target directly "target/geonetwork" as don't know how to forbid both .m2 and WEB-INF *.jar
              to be loaded, thus leading to conflict with domain.jar,
              "java.lang.IllegalStateException: Conflicting persistence unit definitions",
              so target geonetwork-jetty-run, same as geonetwork but with no lib in.
              "geonetwork-jetty-run" is built by maven-resources-plugin, resources listed there should be the same as
               theses ones listed in maven-war-plugin-->
              <resourcesAsCSV>
                ${project.build.directory}/geonetwork-jetty-run
              </resourcesAsCSV>
            </baseResource>
          </webApp>
          <systemProperties>
            <systemProperty>
              <name>org.eclipse.jetty.server.Request.maxFormContentSize</name>
              <value>500000</value>
            </systemProperty>
          </systemProperties>
          <stopKey>JETTY_TOP</stopKey>
          <stopPort>8090</stopPort>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <!-- Define profiles for running configuration using -Denv=profile.id parameter 
    Profiles configuration is defined in src/main/filters.
    -->
  <profiles>
    <profile>
      <id>run-static-analysis</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>no-env-specified</id>
      <activation>
        <property>
          <name>!env</name>
        </property>
      </activation>
      <properties>
        <env>prod</env>
      </properties>
    </profile>
    <profile>
      <id>env-prod</id>
      <activation>
        <property>
          <name>env</name>
          <value>prod</value>
        </property>
      </activation>
      <properties>
        <env>prod</env>
      </properties>
    </profile>
    <profile>
      <id>env-dev</id>
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <properties>
        <env>dev</env>
      </properties>
    </profile>
    <profile>
      <id>env-inspire</id>
      <activation>
        <property>
          <name>env</name>
          <value>inspire</value>
        </property>
      </activation>
      <properties>
        <env>inspire</env>
      </properties>
    </profile>
    <profile>
      <id>debianPackage</id>
      <build>
        <finalName>geonetwork</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <classifier>generic</classifier>
              <archiveClasses>false</archiveClasses>
              <attachClasses>false</attachClasses>
              <webResources>
                <resource>
                  <directory>${project.basedir}/../schemas</directory>
                  <includes>
                    <include>**/src/main/plugin/*</include>
                  </includes>
                  <targetPath>WEB-INF/data/config/schema_plugins</targetPath>
                </resource>
                <resource>
                  <directory>${project.basedir}/../web-ui/src/main/resources</directory>
                </resource>
                <resource>
                  <directory>${build.webapp.resources}</directory>
                </resource>
              </webResources>
              <packagingExcludes>
                xml/schemas/**,
                catalog/lib/style/bootstrap/docs/**,
                catalog/lib/style/bootstrap/fonts/**,
                catalog/lib/style/bootstrap/grunt/**,
                catalog/lib/style/bootstrap/test-infra/**,
                catalog/lib/style/font-awesome/css/**,
                catalog/lib/style/font-awesome/src/**,
                catalog/lib/style/font-awesome/scss/**
              </packagingExcludes>
              <webXml>${build.webapp.resources}/WEB-INF/web.xml</webXml>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.5</version>
            <executions>
              <execution>
                <id>copy-filter-webResource</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <includeEmptyDirs>false</includeEmptyDirs>
                  <outputDirectory>${build.webapp.resources}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/src/main/webResources</directory>
                      <filtering>true</filtering>
                      <targetPath>${build.webapp.resources}</targetPath>
                    </resource>
                  </resources>
                  <filters>
                    <filter>${basedir}/src/main/filters/${env}.properties</filter>
                  </filters>
                  <overwrite>true</overwrite>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.9.4</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/deb/etc/georchestra</checkoutDirectory>
              <connectionUrl>scm:git:https://github.com/georchestra/datadir.git</connectionUrl>
              <pushChanges>false</pushChanges>
              <scmVersion>${project.parent.version}</scmVersion>
              <scmVersionType>branch</scmVersionType>
            </configuration>
            <executions>
              <execution>
                <id>checkout-deb-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>remove-useless-directories</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <delete includeemptydirs="true">
                      <fileset dir="${project.build.directory}/deb/etc/georchestra">
                        <include name="**/*" />
                        <exclude name="geonetwork/**" />
                      </fileset>
                    </delete>
                 </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>fix-permissions</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <chmod perm="ugo+x">
                      <fileset dir="${basedir}/target/deb">
                        <include name="**/bin/**"/>
                        <include name="**/sbin/**"/>
                        <include name="DEBIAN/post*"/>
                        <include name="DEBIAN/pre*"/>
                      </fileset>
                    </chmod>
                  </target>
                </configuration>
                <goals><goal>run</goal></goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.sf.debian-maven</groupId>
            <artifactId>debian-maven-plugin</artifactId>
            <version>1.0.6</version>
            <configuration>
              <packageName>georchestra-geonetwork3</packageName>
              <packageDescription>Debian package for the GeoNetwork fork of geOrchestra.</packageDescription>
              <projectUrl>http://www.georchestra.org/</projectUrl>
              <projectOrganization>geOrchestra</projectOrganization>
              <maintainerName>PSC</maintainerName>
              <maintainerEmail>psc@georchestra.org</maintainerEmail>
              <excludeAllArtifacts>true</excludeAllArtifacts>
              <snapshotRevisionFile>${project.build.directory}</snapshotRevisionFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>rpmPackage</id>
      <properties>
        <env>prod</env>
      </properties>
      <build>
        <finalName>geonetwork</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <classifier>generic</classifier>
              <webResources>
                <resource>
                  <directory>${project.basedir}/../schemas</directory>
                  <includes>
                    <include>**/src/main/plugin/*</include>
                  </includes>
                  <targetPath>WEB-INF/data/config/schema_plugins</targetPath>
                </resource>
                <resource>
                  <directory>${project.basedir}/../web-ui/src/main/resources</directory>
                </resource>
                <resource>
                  <directory>${build.webapp.resources}</directory>
                </resource>
              </webResources>
              <packagingExcludes>
                xml/schemas/**,
                catalog/lib/style/bootstrap/docs/**,
                catalog/lib/style/bootstrap/fonts/**,
                catalog/lib/style/bootstrap/grunt/**,
                catalog/lib/style/bootstrap/test-infra/**,
                catalog/lib/style/font-awesome/css/**,
                catalog/lib/style/font-awesome/src/**,
                catalog/lib/style/font-awesome/scss/**
              </packagingExcludes>
              <webXml>${build.webapp.resources}/WEB-INF/web.xml</webXml>
              <archiveClasses>false</archiveClasses>
              <attachClasses>false</attachClasses>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.9.4</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/deb/etc/georchestra</checkoutDirectory>
              <connectionUrl>scm:git:https://github.com/georchestra/datadir.git</connectionUrl>
              <pushChanges>false</pushChanges>
              <scmVersion>${project.parent.version}</scmVersion>
              <scmVersionType>branch</scmVersionType>
            </configuration>
            <executions>
              <execution>
                <id>checkout-deb-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <configuration>
                  <target>
                    <delete includeemptydirs="true">
                      <fileset dir="${project.build.directory}/deb/etc/georchestra">
                        <include name="**/*" />
                        <exclude name="geonetwork/**" />
                      </fileset>
                    </delete>
                 </target>
                </configuration>
                <id>remove-useless-directories</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1.3</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <name>georchestra-geonetwork3</name>
              <sourceEncoding>UTF-8</sourceEncoding>
              <group>Applications/Internet</group>
              <keyname>${rpm.gpg.key}</keyname>
              <mappings>
                <mapping>
                  <directory>/usr/share/lib/georchestra-geonetwork3</directory>
                  <sources>
                    <source>
                      <location>${project.build.directory}</location>
                      <includes>
                        <include>geonetwork-generic.war</include>
                      </includes>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/</directory>
                  <sources>
                    <source>
                      <location>${project.build.directory}/deb</location>
                    </source>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <properties>
        <dockerImageName>georchestra/${project.parent.artifactId}:3-latest</dockerImageName>
        <dockerDatadirScmUrl>scm:git:https://github.com/georchestra/datadir.git</dockerDatadirScmUrl>
        <dockerDatadirScmVersion>docker-master</dockerDatadirScmVersion>
      </properties>
      <build>
        <finalName>geonetwork</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>1.9.4</version>
            <configuration>
              <checkoutDirectory>${project.build.directory}/datadir/</checkoutDirectory>
              <connectionUrl>${dockerDatadirScmUrl}</connectionUrl>
              <pushChanges>false</pushChanges>
              <scmVersion>${dockerDatadirScmVersion}</scmVersion>
              <scmVersionType>branch</scmVersionType>
            </configuration>
            <executions>
              <execution>
                <id>checkout-docker-default-datadir</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>checkout</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.3.8</version>
            <configuration>
              <imageName>${dockerImageName}</imageName>
              <dockerDirectory>${project.basedir}/src/docker</dockerDirectory>
              <resources>
                <resource>
                  <targetPath>/var/lib/jetty/webapps</targetPath>
                  <directory>${project.build.directory}</directory>
                  <include>geonetwork/**</include>
                </resource>
                <resource>
                  <targetPath>/etc/georchestra</targetPath>
                  <directory>${project.build.directory}/datadir</directory>
                  <include>${project.parent.artifactId}/**</include>
                </resource>
              </resources>
              <serverId>docker-hub</serverId>
              <registryUrl>https://index.docker.io/v1/</registryUrl>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>19.0</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <properties>
    <geonetwork.version>${project.version}</geonetwork.version>
    <geonetwork.subversion>SNAPSHOT</geonetwork.subversion>
    <geonetwork.webapp.dir>${basedir}/src/main/webapp</geonetwork.webapp.dir>
    <geonetwork.webapp.js.dir>${geonetwork.webapp.dir}/scripts</geonetwork.webapp.js.dir>
    <geonetwork.build.dir>${project.build.directory}/${project.build.finalName}</geonetwork.build.dir>
    <geonetwork.webapp.css.dir>${geonetwork.webapp.dir}</geonetwork.webapp.css.dir>
    <minify.verbose>false</minify.verbose>
    <build.webapp.resources>${project.build.directory}/webapp</build.webapp.resources>
    <web.xml.main.config.overrides>/WEB-INF/config-overrides-${env}.xml</web.xml.main.config.overrides>
    <web.xml.widget.config.overrides/>
    <system.specific.overrides/>
    <rootProjectDir>${basedir}/..</rootProjectDir>
    <wro4jOutput>${project.build.directory}/wro4j-output/</wro4jOutput>
    <datadir>datadir</datadir>
  </properties>
</project>
