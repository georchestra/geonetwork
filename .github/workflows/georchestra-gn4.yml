name: Building georchestra-geonetwork4 artifacts

on:
  push:
    branches:
    - georchestra-gn4.2.x
  pull_request:
  workflow_dispatch:

env:
  DOCKER_TAG: 4.2.x

jobs:
  build:
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
    - name: "Checking out"
      uses: actions/checkout@v2.4.0
      with:
        submodules: 'recursive'

    - name: "Checking out geOrchestra (needed for building dependencies)"
      uses: actions/checkout@v2.4.0
      with:
        repository: "georchestra/georchestra"
        path: "georchestra"

    - name: "Setting up Java"
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: "Installing the geOrchestra root pom"
      run: |
          mvn install --non-recursive -f georchestra/pom.xml

    - name: "Installing testcontainers georchestra module"
      run: |
          mvn clean install -f georchestra/testcontainers/pom.xml

    - name: "Installing georchestra commons module"
      run: |
          mvn clean install -f georchestra/commons/pom.xml

    - name: "Installing security-proxy-spring-integration georchestra module"
      run: |
          mvn clean install -f georchestra/security-proxy-spring-integration/pom.xml

    - name: "Installing GeoNetwork"
      run: mvn clean install -DskipTests

    - name: "run tests"
      run: mvn verify -Pit

    - name: "publish the webapp as artifact"
      if: github.repository == 'georchestra/geonetwork' && github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/georchestra-gn4.2.x' && github.event_name != 'pull_request'
      uses: actions/upload-artifact@v1
      with:
        name: geonetwork.war
        path: web/target/geonetwork.war

